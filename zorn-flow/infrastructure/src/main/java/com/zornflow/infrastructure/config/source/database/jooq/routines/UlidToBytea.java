/*
 * This file is generated by jOOQ.
 */
package com.zornflow.infrastructure.config.source.database.jooq.routines;


import com.zornflow.infrastructure.config.source.database.jooq.Engine;

import org.jooq.Field;
import org.jooq.Parameter;
import org.jooq.impl.AbstractRoutine;
import org.jooq.impl.DSL;
import org.jooq.impl.DefaultDataType;
import org.jooq.impl.Internal;
import org.jooq.impl.SQLDataType;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class UlidToBytea extends AbstractRoutine<byte[]> {

    private static final long serialVersionUID = 1L;

    /**
     * The parameter <code>engine.ulid_to_bytea.RETURN_VALUE</code>.
     */
    public static final Parameter<byte[]> RETURN_VALUE = Internal.createParameter("RETURN_VALUE", SQLDataType.BLOB, false, false);

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static final Parameter<Object> INPUT = Internal.createParameter("input", DefaultDataType.getDefaultDataType("\"engine\".\"ulid\""), false, false);

    /**
     * Create a new routine call instance
     */
    public UlidToBytea() {
        super("ulid_to_bytea", Engine.ENGINE, DSL.comment(""), SQLDataType.BLOB);

        setReturnParameter(RETURN_VALUE);
        addInParameter(INPUT);
    }

    /**
     * Set the <code>input</code> parameter IN value to the routine
     */
    public void setInput(Object value) {
        setValue(INPUT, value);
    }

    /**
     * Set the <code>input</code> parameter to the function to be used with a
     * {@link org.jooq.Select} statement
     */
    public UlidToBytea setInput(Field<Object> field) {
        setField(INPUT, field);
        return this;
    }
}
