/*
 * This file is generated by jOOQ.
 */
package com.zornflow.infrastructure.config.source.database.jooq.tables.pojos;


import java.io.Serializable;
import java.time.OffsetDateTime;

import org.jooq.JSONB;


/**
 * 可复用的共享流程节点模板
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class SharedNodes implements Serializable {

    private static final long serialVersionUID = 1L;

    private final String id;
    private final String name;
    private final String nodeType;
    private final String ruleChainId;
    private final JSONB conditions;
    private final JSONB properties;
    private final OffsetDateTime createdAt;
    private final OffsetDateTime updatedAt;

    public SharedNodes(SharedNodes value) {
        this.id = value.id;
        this.name = value.name;
        this.nodeType = value.nodeType;
        this.ruleChainId = value.ruleChainId;
        this.conditions = value.conditions;
        this.properties = value.properties;
        this.createdAt = value.createdAt;
        this.updatedAt = value.updatedAt;
    }

    public SharedNodes(
        String id,
        String name,
        String nodeType,
        String ruleChainId,
        JSONB conditions,
        JSONB properties,
        OffsetDateTime createdAt,
        OffsetDateTime updatedAt
    ) {
        this.id = id;
        this.name = name;
        this.nodeType = nodeType;
        this.ruleChainId = ruleChainId;
        this.conditions = conditions;
        this.properties = properties;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
    }

    /**
     * Getter for <code>engine.shared_nodes.id</code>.
     */
    public String getId() {
        return this.id;
    }

    /**
     * Getter for <code>engine.shared_nodes.name</code>.
     */
    public String getName() {
        return this.name;
    }

    /**
     * Getter for <code>engine.shared_nodes.node_type</code>.
     */
    public String getNodeType() {
        return this.nodeType;
    }

    /**
     * Getter for <code>engine.shared_nodes.rule_chain_id</code>.
     */
    public String getRuleChainId() {
        return this.ruleChainId;
    }

    /**
     * Getter for <code>engine.shared_nodes.conditions</code>.
     */
    public JSONB getConditions() {
        return this.conditions;
    }

    /**
     * Getter for <code>engine.shared_nodes.properties</code>.
     */
    public JSONB getProperties() {
        return this.properties;
    }

    /**
     * Getter for <code>engine.shared_nodes.created_at</code>.
     */
    public OffsetDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Getter for <code>engine.shared_nodes.updated_at</code>.
     */
    public OffsetDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final SharedNodes other = (SharedNodes) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.name == null) {
            if (other.name != null)
                return false;
        }
        else if (!this.name.equals(other.name))
            return false;
        if (this.nodeType == null) {
            if (other.nodeType != null)
                return false;
        }
        else if (!this.nodeType.equals(other.nodeType))
            return false;
        if (this.ruleChainId == null) {
            if (other.ruleChainId != null)
                return false;
        }
        else if (!this.ruleChainId.equals(other.ruleChainId))
            return false;
        if (this.conditions == null) {
            if (other.conditions != null)
                return false;
        }
        else if (!this.conditions.equals(other.conditions))
            return false;
        if (this.properties == null) {
            if (other.properties != null)
                return false;
        }
        else if (!this.properties.equals(other.properties))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.updatedAt == null) {
            if (other.updatedAt != null)
                return false;
        }
        else if (!this.updatedAt.equals(other.updatedAt))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.nodeType == null) ? 0 : this.nodeType.hashCode());
        result = prime * result + ((this.ruleChainId == null) ? 0 : this.ruleChainId.hashCode());
        result = prime * result + ((this.conditions == null) ? 0 : this.conditions.hashCode());
        result = prime * result + ((this.properties == null) ? 0 : this.properties.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.updatedAt == null) ? 0 : this.updatedAt.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("SharedNodes (");

        sb.append(id);
        sb.append(", ").append(name);
        sb.append(", ").append(nodeType);
        sb.append(", ").append(ruleChainId);
        sb.append(", ").append(conditions);
        sb.append(", ").append(properties);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(updatedAt);

        sb.append(")");
        return sb.toString();
    }
}
