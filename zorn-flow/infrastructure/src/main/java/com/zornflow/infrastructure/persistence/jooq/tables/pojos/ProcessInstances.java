/*
 * This file is generated by jOOQ.
 */
package com.zornflow.infrastructure.persistence.jooq.tables.pojos;


import org.jooq.JSONB;

import java.io.Serializable;
import java.time.OffsetDateTime;


/**
 * 流程实例
 */
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
public class ProcessInstances implements Serializable {

  private static final long serialVersionUID = 1L;

  private final String id;
  private final String processChainId;
  private final String status;
  private final String currentNodeId;
  private final JSONB context;
  private final Integer version;
  private final OffsetDateTime createdAt;
  private final OffsetDateTime updatedAt;

  public ProcessInstances(ProcessInstances value) {
    this.id = value.id;
    this.processChainId = value.processChainId;
    this.status = value.status;
    this.currentNodeId = value.currentNodeId;
    this.context = value.context;
    this.version = value.version;
    this.createdAt = value.createdAt;
    this.updatedAt = value.updatedAt;
  }

  public ProcessInstances(
    String id,
    String processChainId,
    String status,
    String currentNodeId,
    JSONB context,
    Integer version,
    OffsetDateTime createdAt,
    OffsetDateTime updatedAt
  ) {
    this.id = id;
    this.processChainId = processChainId;
    this.status = status;
    this.currentNodeId = currentNodeId;
    this.context = context;
    this.version = version;
    this.createdAt = createdAt;
    this.updatedAt = updatedAt;
  }

  /**
   * Getter for <code>engine.process_instances.id</code>.
   */
  public String getId() {
    return this.id;
  }

  /**
   * Getter for <code>engine.process_instances.process_chain_id</code>.
   */
  public String getProcessChainId() {
    return this.processChainId;
  }

  /**
   * Getter for <code>engine.process_instances.status</code>.
   */
  public String getStatus() {
    return this.status;
  }

  /**
   * Getter for <code>engine.process_instances.current_node_id</code>.
   */
  public String getCurrentNodeId() {
    return this.currentNodeId;
  }

  /**
   * Getter for <code>engine.process_instances.context</code>.
   */
  public JSONB getContext() {
    return this.context;
  }

  /**
   * Getter for <code>engine.process_instances.version</code>.
   */
  public Integer getVersion() {
    return this.version;
  }

  /**
   * Getter for <code>engine.process_instances.created_at</code>.
   */
  public OffsetDateTime getCreatedAt() {
    return this.createdAt;
  }

  /**
   * Getter for <code>engine.process_instances.updated_at</code>.
   */
  public OffsetDateTime getUpdatedAt() {
    return this.updatedAt;
  }

  @Override
  public boolean equals(Object obj) {
    if (this == obj)
      return true;
    if (obj == null)
      return false;
    if (getClass() != obj.getClass())
      return false;
    final ProcessInstances other = (ProcessInstances) obj;
    if (this.id == null) {
      if (other.id != null)
        return false;
    } else if (!this.id.equals(other.id))
      return false;
    if (this.processChainId == null) {
      if (other.processChainId != null)
        return false;
    } else if (!this.processChainId.equals(other.processChainId))
      return false;
    if (this.status == null) {
      if (other.status != null)
        return false;
    } else if (!this.status.equals(other.status))
      return false;
    if (this.currentNodeId == null) {
      if (other.currentNodeId != null)
        return false;
    } else if (!this.currentNodeId.equals(other.currentNodeId))
      return false;
    if (this.context == null) {
      if (other.context != null)
        return false;
    } else if (!this.context.equals(other.context))
      return false;
    if (this.version == null) {
      if (other.version != null)
        return false;
    } else if (!this.version.equals(other.version))
      return false;
    if (this.createdAt == null) {
      if (other.createdAt != null)
        return false;
    } else if (!this.createdAt.equals(other.createdAt))
      return false;
    if (this.updatedAt == null) {
      if (other.updatedAt != null)
        return false;
    } else if (!this.updatedAt.equals(other.updatedAt))
      return false;
    return true;
  }

  @Override
  public int hashCode() {
    final int prime = 31;
    int result = 1;
    result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
    result = prime * result + ((this.processChainId == null) ? 0 : this.processChainId.hashCode());
    result = prime * result + ((this.status == null) ? 0 : this.status.hashCode());
    result = prime * result + ((this.currentNodeId == null) ? 0 : this.currentNodeId.hashCode());
    result = prime * result + ((this.context == null) ? 0 : this.context.hashCode());
    result = prime * result + ((this.version == null) ? 0 : this.version.hashCode());
    result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
    result = prime * result + ((this.updatedAt == null) ? 0 : this.updatedAt.hashCode());
    return result;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("ProcessInstances (");

    sb.append(id);
    sb.append(", ").append(processChainId);
    sb.append(", ").append(status);
    sb.append(", ").append(currentNodeId);
    sb.append(", ").append(context);
    sb.append(", ").append(version);
    sb.append(", ").append(createdAt);
    sb.append(", ").append(updatedAt);

    sb.append(")");
    return sb.toString();
  }
}
