/*
 * This file is generated by jOOQ.
 */
package com.zornflow.infrastructure.config.source.database.jooq.tables.records;


import com.zornflow.infrastructure.config.source.database.jooq.tables.pojos.SharedNodes;

import java.time.OffsetDateTime;

import org.jooq.JSONB;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 可复用的共享流程节点模板
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class SharedNodesRecord extends UpdatableRecordImpl<SharedNodesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>engine.shared_nodes.id</code>.
     */
    public SharedNodesRecord setId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>engine.shared_nodes.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>engine.shared_nodes.name</code>.
     */
    public SharedNodesRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>engine.shared_nodes.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>engine.shared_nodes.node_type</code>.
     */
    public SharedNodesRecord setNodeType(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>engine.shared_nodes.node_type</code>.
     */
    public String getNodeType() {
        return (String) get(2);
    }

    /**
     * Setter for <code>engine.shared_nodes.rule_chain_id</code>.
     */
    public SharedNodesRecord setRuleChainId(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>engine.shared_nodes.rule_chain_id</code>.
     */
    public String getRuleChainId() {
        return (String) get(3);
    }

    /**
     * Setter for <code>engine.shared_nodes.conditions</code>.
     */
    public SharedNodesRecord setConditions(JSONB value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>engine.shared_nodes.conditions</code>.
     */
    public JSONB getConditions() {
        return (JSONB) get(4);
    }

    /**
     * Setter for <code>engine.shared_nodes.properties</code>.
     */
    public SharedNodesRecord setProperties(JSONB value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>engine.shared_nodes.properties</code>.
     */
    public JSONB getProperties() {
        return (JSONB) get(5);
    }

    /**
     * Setter for <code>engine.shared_nodes.created_at</code>.
     */
    public SharedNodesRecord setCreatedAt(OffsetDateTime value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>engine.shared_nodes.created_at</code>.
     */
    public OffsetDateTime getCreatedAt() {
        return (OffsetDateTime) get(6);
    }

    /**
     * Setter for <code>engine.shared_nodes.updated_at</code>.
     */
    public SharedNodesRecord setUpdatedAt(OffsetDateTime value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>engine.shared_nodes.updated_at</code>.
     */
    public OffsetDateTime getUpdatedAt() {
        return (OffsetDateTime) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SharedNodesRecord
     */
    public SharedNodesRecord() {
        super(com.zornflow.infrastructure.config.source.database.jooq.tables.SharedNodes.SHARED_NODES);
    }

    /**
     * Create a detached, initialised SharedNodesRecord
     */
    public SharedNodesRecord(String id, String name, String nodeType, String ruleChainId, JSONB conditions, JSONB properties, OffsetDateTime createdAt, OffsetDateTime updatedAt) {
        super(com.zornflow.infrastructure.config.source.database.jooq.tables.SharedNodes.SHARED_NODES);

        setId(id);
        setName(name);
        setNodeType(nodeType);
        setRuleChainId(ruleChainId);
        setConditions(conditions);
        setProperties(properties);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        resetTouchedOnNotNull();
    }

    /**
     * Create a detached, initialised SharedNodesRecord
     */
    public SharedNodesRecord(SharedNodes value) {
        super(com.zornflow.infrastructure.config.source.database.jooq.tables.SharedNodes.SHARED_NODES);

        if (value != null) {
            setId(value.getId());
            setName(value.getName());
            setNodeType(value.getNodeType());
            setRuleChainId(value.getRuleChainId());
            setConditions(value.getConditions());
            setProperties(value.getProperties());
            setCreatedAt(value.getCreatedAt());
            setUpdatedAt(value.getUpdatedAt());
            resetTouchedOnNotNull();
        }
    }
}
