/*
 * This file is generated by jOOQ.
 */
package com.zornflow.infrastructure.config.source.database.jooq;


import com.zornflow.infrastructure.config.source.database.jooq.tables.ChainNodes;
import com.zornflow.infrastructure.config.source.database.jooq.tables.ChainRules;
import com.zornflow.infrastructure.config.source.database.jooq.tables.ProcessChains;
import com.zornflow.infrastructure.config.source.database.jooq.tables.ProcessInstances;
import com.zornflow.infrastructure.config.source.database.jooq.tables.RuleChains;
import com.zornflow.infrastructure.config.source.database.jooq.tables.SharedNodes;
import com.zornflow.infrastructure.config.source.database.jooq.tables.SharedRules;

import java.util.Arrays;
import java.util.List;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.DSL;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Engine extends SchemaImpl {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>engine</code>
     */
    public static final Engine ENGINE = new Engine();

    /**
     * 节点在链中的具体实例，存储顺序、与共享模板的链接以及属性覆盖
     */
    public final ChainNodes CHAIN_NODES = ChainNodes.CHAIN_NODES;

    /**
     * 规则在链中的具体实例，存储顺序、与共享模板的链接以及属性覆盖
     */
    public final ChainRules CHAIN_RULES = ChainRules.CHAIN_RULES;

    /**
     * The table <code>engine.process_chains</code>.
     */
    public final ProcessChains PROCESS_CHAINS = ProcessChains.PROCESS_CHAINS;

    /**
     * 流程实例
     */
    public final ProcessInstances PROCESS_INSTANCES = ProcessInstances.PROCESS_INSTANCES;

    /**
     * The table <code>engine.rule_chains</code>.
     */
    public final RuleChains RULE_CHAINS = RuleChains.RULE_CHAINS;

    /**
     * 可复用的共享流程节点模板
     */
    public final SharedNodes SHARED_NODES = SharedNodes.SHARED_NODES;

    /**
     * 可复用的共享规则模板
     */
    public final SharedRules SHARED_RULES = SharedRules.SHARED_RULES;

    /**
     * No further instances allowed
     */
    private Engine() {
        super(DSL.name("engine"), null, DSL.comment(""));
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.asList(
            ChainNodes.CHAIN_NODES,
            ChainRules.CHAIN_RULES,
            ProcessChains.PROCESS_CHAINS,
            ProcessInstances.PROCESS_INSTANCES,
            RuleChains.RULE_CHAINS,
            SharedNodes.SHARED_NODES,
            SharedRules.SHARED_RULES
        );
    }
}
